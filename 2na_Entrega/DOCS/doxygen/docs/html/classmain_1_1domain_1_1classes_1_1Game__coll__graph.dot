digraph "main.domain.classes.Game"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{main.domain.classes.Game\n||+ Game()\l+ Game()\l+ Game()\l+ insertNumberInCell()\l+ getHint()\l+ getSolution()\l+ validate()\l+ validateKenken()\l+ toString()\l+ getP()\land 10 more...\l+ getColorByValue()\l+ printKenKenBoard()\l- initializeKenken()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -id" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{String\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -p" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{main.domain.classes.Player\n||+ Player()\l+ Player()\l+ Player()\l+ addPlayer()\l+ showStatistics()\l+ saveGame()\l+ removeLastGame()\l+ correctPasword()\l+ getPassword()\l+ setPassword()\land 13 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Player.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -score\n-winGame\n-playGame" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Integer\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node2 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -psw\n+name\n-kenkenFormat" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +ranking" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{main.domain.classes.Ranking\n||+ Ranking()\l+ addScore()\l+ updateScore()\l+ printRanking()\l+ addPlayer()\l+ removePlayer()\l+ hasPlayer()\l+ getRanking()\l+ getScore()\l+ getId()\l+ setId()\l+ getPos()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Ranking.html",tooltip=" "];
  Node2 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -id" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -actRanking" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{Map\< String, Integer \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" -actualBoard" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{int\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #registered" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{boolean\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -kenken" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -b" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{main.domain.classes.Board\n||+ Board()\l+ Board()\l+ Board()\l+ createBoard()\l+ readFile()\l+ storeKenken()\l+ getRandomKenken()\l+ getHint()\l+ getSolution()\l+ validate()\land 20 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Board.html",tooltip=" "];
  Node2 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -id" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -library" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{main.domain.classes.Library\n||+ Library()\l+ createKenken()\l+ deleteKenken()\l+ existsKenkens()\l+ getRandomKenken()\l+ newformat()\l+ readKenkens()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Library.html",tooltip=" "];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" -Kenkens" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{HashMap\< Integer, main.domain.classes.\lBoard \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +infoKenken\n+difficulty\n+size\n+region" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -operands" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{Boolean[]\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -algorithm" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{main.domain.classes.Algorithm\n||+ Algorithm()\l+ validate()\l+ validateFromGame()\l+ validateKenken()\l+ getKenkenSol()\l+ generateKenken()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Algorithm.html",tooltip=" "];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -validator" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{main.domain.classes.Validator\n||+ Validator()\l+ backtrackValidation()\l+ Validation()\l+ validateKenken()\l+ readFile()\l- backtrackValidationSUM()\l- backtrackValidationMULT()\l- backtrackValidationREST()\l- backtrackValidationDIV()\l- backtrackValidationSUMOFSQUARES()\l- backtrackValidationMOD()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Validator.html",tooltip=" "];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" ~operators" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{List\< main.domain.classes.\lValidator.Operator \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +kenken" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -generator" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{main.domain.classes.Generator\n||+ Generator()\l+ generate()\l+ validate()\l+ calcOperation()\l+ addDivisionInRegion()\l+ generateRegions()\l+ generateBoard()\l+ checkValidation()\l+ generateKenken()\l+ modifyBoolean()\l- completeBoard()\l- randomSizeStart()\l- fillBoard()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmain_1_1domain_1_1classes_1_1Generator.html",tooltip=" "];
  Node7 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -size" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" ~operators" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{List\< main.domain.classes.\lGenerator.Operator \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
